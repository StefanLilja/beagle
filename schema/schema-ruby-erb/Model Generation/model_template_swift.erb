// THIS IS A GENERATED FILE. DO NOT EDIT THIS
/*
 * Copyright 2020 ZUP IT SERVICOS EM TECNOLOGIA E INOVACAO SA
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
<%
  def handleTypeName(variable)
      output = variable.isBindable ? "Expression<" + variable.typeName + ">" : variable.typeName
      output = variable.isArray ? "[" + output + "]" : output
      output = variable.isOptional ? output + "?" : output
      output
  end

  def handleTypeNameForInitMethod(variable, shouldAddComma = false)
    output = variable.isBindable ? "Expression<" + variable.typeName + ">" : variable.typeName
    output = variable.isArray ? "[" + output + "]" : output
    output = variable.isOptional ? output + "?" : output

    if variable.isOptional && variable.defaultValue == ''
      output += " = nil"
    elsif variable.defaultValue != ''
      output += " #{variable.defaultValue}"
    end
    
    output = shouldAddComma ?  output + "," : output
    output
  end

  def handleInheritance(synthaxType)
    output = synthaxType.inheritFrom.size == 0 ? "" : ": "
    counter = 0
    for type in synthaxType.inheritFrom
      output += type
      output = synthaxType.inheritFrom.size - 1 != counter ? output + ", " : output
      counter += 1
    end

    output
  end

-%>

<%= objectType.synthaxType.accessor %> struct <%= objectType.synthaxType.name -%><%= handleInheritance(objectType.synthaxType) %> {
  
  // MARK: - Public Properties<% -%>
  <% for variable in objectType.synthaxType.variables %>
  <%= variable.accessor %> let <%= variable.name %>: <%= handleTypeName(variable) -%>
  <% end %>

  <%= objectType.synthaxType.accessor %> init(<% -%>
    <% counter = 0 -%>
    <% for variable in objectType.synthaxType.variables %>
    <%= variable.name %>: <%= handleTypeNameForInitMethod(variable, objectType.synthaxType.variables.size - 1 != counter)-%>
    <% counter += 1 -%>
    <% end %>
  ) {<% -%>
    <% for variable in objectType.synthaxType.variables %>
      self.<%= variable.name %> = <%= variable.name -%>
    <% end %>
  }
}